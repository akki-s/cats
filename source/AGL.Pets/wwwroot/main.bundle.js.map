{"version":3,"sources":["C:/Users/aakash/source/repos/agl-test/source/AGL.Pets/ng-src/$_lazy_route_resource lazy","C:/Users/aakash/source/repos/agl-test/source/AGL.Pets/ng-src/app/app.component.css","C:/Users/aakash/source/repos/agl-test/source/AGL.Pets/ng-src/app/app.component.html","C:/Users/aakash/source/repos/agl-test/source/AGL.Pets/ng-src/app/app.component.ts","C:/Users/aakash/source/repos/agl-test/source/AGL.Pets/ng-src/app/app.module.ts","C:/Users/aakash/source/repos/agl-test/source/AGL.Pets/ng-src/environments/environment.ts","C:/Users/aakash/source/repos/agl-test/source/AGL.Pets/ng-src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4F;;;;;;;ACVA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,uEAAuE,SAAS,oEAAoE,oBAAoB,0HAA0H,mBAAmB,sEAAsE,UAAU,4D;;;;;;;;;;;;;;;;;;;;ACAnV;AACb;AAQrC;IACE,sBAAoB,YAAkB;QAAlB,iBAAY,GAAZ,YAAY,CAAM;QACtC,UAAK,GAAW,iBAAiB,CAAC;QAClC,eAAU,GAAkB,EAAE,CAAC;QAC/B,YAAO,GAAW,EAAE,CAAC;QACrB,cAAS,GAAY,IAAI,CAAC;IAJgB,CAAC;IAK3C,+BAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACnD,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;YAChE,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAG,CAAC,CAC3B,CAAC;gBACC,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAClC,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,CAAC;oBAC9B,KAAI,CAAC,OAAO,GAAG,2BAA2B,CAAC;YAC/C,CAAC;YACD,IAAI;gBACF,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,UAAU,GAAG,gCAAgC,CAAC;YACxE,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;YACxC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IApBU,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAEkC,2DAAI;OAD3B,YAAY,CAqBxB;IAAD,mBAAC;CAAA;AArBwB;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AAGM;AACJ;AAa3C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,iEAAU;aACX;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;AClBtB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,8EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../ng-src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/aakash/source/repos/agl-test/source/AGL.Pets/ng-src/$$_lazy_route_resource lazy\n// module id = ../../../../../ng-src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/aakash/source/repos/agl-test/source/AGL.Pets/ng-src/app/app.component.css\n// module id = ../../../../../ng-src/app/app.component.css\n// module chunks = main","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    {{ title }}\\r\\n  </h1>\\r\\n  <h3 *ngIf=\\\"isLoading\\\">Loading...</h3>\\r\\n  <h3>{{message || message}}</h3>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class='petsList'>\\r\\n  <ul>\\r\\n    <li *ngFor=\\\"let owner of petsResult\\\">\\r\\n      <h3>{{owner.ownerGender}}</h3>\\r\\n      <div *ngFor=\\\"let cat of owner.cats\\\">\\r\\n        <p>{{cat.name}} </p>\\r\\n      </div>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/aakash/source/repos/agl-test/source/AGL.Pets/ng-src/app/app.component.html\n// module id = ../../../../../ng-src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { PetsGrouped } from './models/pets.grouped';  \n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private _httpService: Http) { }\r\n  title: string = 'AGL Coding Test';\n  petsResult: PetsGrouped[] = [];\n  message: string = '';\n  isLoading: boolean = true;\n  ngOnInit(): void {\r\n    this._httpService.get('/api/pets').subscribe(response => {\r\n      console.log('api result', response.status, response.statusText);\r\n      if (response.status == 200)\r\n      {\r\n        this.petsResult = response.json();\r\n        if (this.petsResult.length == 0)\r\n          this.message = 'No data returned from Api';\r\n      }\r\n      else\r\n        this.message = response.statusText + ' - There is an issue with Api.';\r\n      console.log('GROUPED', this.petsResult);\r\n      this.isLoading = false;\r\n    }); \r\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/aakash/source/repos/agl-test/source/AGL.Pets/ng-src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport { HttpModule } from '@angular/http';  \n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/aakash/source/repos/agl-test/source/AGL.Pets/ng-src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/aakash/source/repos/agl-test/source/AGL.Pets/ng-src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/aakash/source/repos/agl-test/source/AGL.Pets/ng-src/main.ts"],"sourceRoot":"webpack:///"}